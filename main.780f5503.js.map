{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","addEventListener","nodeName","id","printMessage","message","newElement","document","createElement","body","append","classList","add","innerHTML","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GAWjB,OAAA,IAAIC,QAVM,SAACC,GAChBH,EAAQI,iBAAiBH,EAAW,WAClCE,EACYF,UAAAA,OAAAA,EACQD,+BAAAA,OAAAA,EAAQK,SACpBL,oBAAAA,OAAAA,EAAQM,GAHhB,UAWN,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAaC,SAASC,cAAc,OAE1CD,SAASE,KAAKC,OAAOJ,GACrBA,EAAWK,UAAUC,IAAI,WACzBN,EAAWO,WAAaR,GAG1BS,OAAOC,QAAU,CACfnB,QAAAA,EACAQ,aAAAA","file":"main.780f5503.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  const resolver = (resolve) => {\n    element.addEventListener(eventName, () => {\n      resolve(\n        `It was ${eventName} \n        on the element: ${element.nodeName}, \n        id: ${element.id}.`\n      );\n    });\n  };\n\n  return new Promise(resolver);\n}\n\nconst printMessage = (message) => {\n  const newElement = document.createElement('div');\n\n  document.body.append(newElement);\n  newElement.classList.add('message');\n  newElement.innerHTML += message;\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}